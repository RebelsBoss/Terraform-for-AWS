1. Task:
       The manifest works under the conditions of an existing user (with granted rights, I granted admin rights) and the created S3 bucket.
       Then execute the command: "terraform init".
       Tested the terraform command: "terraform plan".
       Then "terraform apply" did not execute, due to the monetary policy of the platform.
2. Task:
       2 instances and their hosts are required for operation.
       Used localhost for testing.
       Tested locally using the following commands: "ansible-playbook playbook.yml --check", "ansible-playbook playbook.yml --syntax-check"
3. Task:
       Depends on the performance of the first 2. Substituted the value. But again, I couldn't check everything because of the money policy of the platform.      

In the course of the task, I used the following sites.
1. https://www.google.com
2. VPC - https://docs.aws.amazon.com/vpc/latest/userguide/configure-your-vpc.html
3. VPC scenario - https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html
4. NAT - https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html
5. Target group - https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-target-group.html
6. ALB - https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html
7. RDS - https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.html
8. EC2 - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Instances.html
9. Security group - https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html
10. Route tables - https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html
11. Terraform best practices - https://www.terraform-best-practices.com/
12. Terraform example - https://github.com/terraform-aws-modules/terraform-aws-atlantis
13. S3 bucket - https://s3.console.aws.amazon.com/s3/get-started?region=us-west-2
14. Ansible - https://docs.ansible.com/ansible/latest/playbook_guide/index.html
15. Docker - https://docs.docker.com/desktop/install/linux-install/
16. DockerCompose - https://docs.docker.com/compose/install/
17. Docker DB - https://github.com/docker/awesome-compose/blob/master/wordpress-mysql/compose.yaml
18. https://www.youtube.com/@ADV-IT
19. https://registry.terraform.io/modules/terraform-aws-modules/vpc/aws/latest
20. https://github.com/antonbabenko/terraform-best-practices/blob/master/examples/large-terraform/prod/main.tf
21. https://www.terraform-best-practices.com/v/uk/examples/terraform/large-size-infrastructure-with-terraform
22. https://github.com/JsonHairston/terraform_project/blob/main/main.tf
23. https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance
24. https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group
25. https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_subnet_group
26. https://www.digitalocean.com/community/tutorials/how-to-use-ansible-to-install-and-set-up-docker-on-ubuntu-20-04
27. https://cloudinfrastructureservices.co.uk/how-to-install-docker-compose-using-ansible-playbook/
28.https://github.com/docker/awesome-compose/blob/master/wordpress-mysql/compose.yaml
29.
